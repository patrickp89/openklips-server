openapi: 3.0.0
info:
  version: 1.0.0
  title: OpenKlips-server
  license:
    name: GNU General Public License 3
    url: https://www.gnu.org/licenses/gpl-3.0.html
paths:
  /user/{username}:
    get:
      summary: Get the user for a given username
      operationId: getUser
      tags:
        - user
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A user object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /course:
    get:
      summary: Get all courses
      operationId: getCourses
      tags:
        - course
      responses:
        '200':
          description: An array of course objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CourseDto"
          default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"

  /student/{studentId}:
    get:
      summary: Get a specific student for its studentId
      operationId: getStudentEnrollments
      tags:
        - student
        - enrollment
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: string
          description: The student's studentId (Matrikelnummer)
      responses:
        '200':
          description: An array of enrollment objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudentDto"
          default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
  /student/{studentId}/enrollment:
    get:
      summary: Get the enrollments of a specific student
      operationId: getStudentEnrollments
      tags:
        - student
        - enrollment
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: string
          description: The student's studentId (Matrikelnummer)
      responses:
        '200':
          description: An array of enrollment objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EnrollmentDto"
          default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"

components:
  schemas:
    UserDto:
      required:
        - id
        - username
        - firstName
        - lastName
        - address
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        title:
          type: string
        address:
          $ref: '#/components/schemas/AddressDto'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleDto'

    StudentDto:
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        enrollments:
          type: array
          items:
            $ref: '#/components/schemas/EnrollmentDto'

    AddressDto:
      properties:
        id:
          type: integer
          format: int64
        country:
          type: string
        zipCode:
          type: string
        city:
          type: string
        streetName:
          type: string
        houseNumber:
          type: string
        additionalDetails:
          type: string

    RoleDto:
      properties:
        id:
          type: integer
          format: int64
          description: This is (an arbitrary) ID that identifies the student/instructor/... in later calls. For a student it will very likely be his/her studentId (Matrikelnummer), but could be configured differently
        roleType:
          $ref: '#/components/schemas/RoleType'

    RoleType:
      type: string
      enum:
        - student
        - instructor

    CourseDto:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        courseDescription:
          type: string

    EnrollmentDto:
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        startDate:
          type: string
          format: date

    Error:
      required:
        - message
      properties:
        message:
          type: string
